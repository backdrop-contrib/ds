<?php

/**
 * @file
 * Uses the panels layout manager to style the view modes.
 */

/**
 * Implementation of hook_menu().
 */
function ds_panels_menu() {

  // Safety: go away if CTools is not at an appropriate version.
  if (!defined('PANELS_REQUIRED_CTOOLS_API') || !module_invoke('ctools', 'api_version', PANELS_REQUIRED_CTOOLS_API)) {
    return array();
  }

  $items['admin/structure/panels/settings/ds-panels'] = array(
    'title' => 'Panel view modes',
    'description' => 'Configure which content is available to add to panel view mode displays.',
    'access arguments' => array('admin_display_suite'),
    'page callback' => 'ds_panels_view_mode_settings',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Menu callback: settings for DS panels.
 */
function ds_panels_view_mode_settings() {
  ctools_include('common', 'panels');
  return drupal_get_form('panels_common_settings', 'panels_ds');
}

/**
 * Implementation of hook_menu_alter().
 */
function ds_panels_menu_alter(&$items) {

  // No point in having custom fields & styles.
  unset($items['admin/structure/ds/fields']);
  unset($items['admin/structure/ds/fields/manage']);
  unset($items['admin/structure/ds/fields/manage_custom']);
  unset($items['admin/structure/ds/fields/manage_ctools']);
  unset($items['admin/structure/ds/fields/manage_block']);
  unset($items['admin/structure/ds/fields/delete']);
  unset($items['admin/structure/ds/fields/revert']);
  unset($items['admin/structure/ds/styles']);

  $ds_panels_path = drupal_get_path('module', 'ds_panels');

  // Convert all manage display screen callbacks.
  foreach (entity_get_info() as $entity_type => $entity_info) {
    if ($entity_info['fieldable']) {
      foreach ($entity_info['bundles'] as $bundle_name => $bundle_info) {
        if (isset($bundle_info['admin'])) {

          // Extract path information from the bundle.
          $path = $bundle_info['admin']['path'];

          if (isset($bundle_info['admin']['bundle argument'])) {
            $bundle_arg = $bundle_info['admin']['bundle argument'];
            $bundle_pos = (string) $bundle_arg;
          }
          else {
            $bundle_arg = $bundle_name;
            $bundle_pos = '0';
          }

          $items["$path/display"]['page callback'] = 'ds_panels_field_ui';
          $items["$path/display"]['page arguments'] = array($entity_type, $bundle_arg, 'default');
          $items["$path/display"]['file'] = 'ds_panels.admin.inc';
          $items["$path/display"]['file path'] = $ds_panels_path;

          $view_modes = array('default' => array('label' => t('Default'))) + $entity_info['view modes'];
          foreach ($view_modes as $view_mode => $view_mode_info) {
            $items["$path/display/$view_mode"]['page arguments'] = array($entity_type, $bundle_arg, $view_mode);
            $items["$path/display/$view_mode"]['file'] = 'ds_panels.admin.inc';
            $items["$path/display/$view_mode"]['file path'] = $ds_panels_path;
          }
        }
      }
    }
  }
}

/**
 * Implementation of hook_panels_dashboard_blocks().
 */
function ds_panels_panels_dashboard_blocks(&$vars) {
  $vars['links']['ds_panels'] = array(
    'title' => l(t('Panel view modes'), 'admin/structure/ds/layout'),
    'description' => t('Manage the layout of view modes for every entity.'),
    'weight' => -3,
  );
}

/**
 * Implements hook_module_implements_alter().
 */
function ds_panels_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_field_ui_display_overview_form_alter') {
    unset($implementations['ds']);
    unset($implementations['ds_extras']);
    unset($implementations['field_group']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ds_panels_form_ds_extras_settings_alter(&$form, $form_state) {
  $form['additional_settings']['fs1']['#access'] = FALSE;
  $form['additional_settings']['fs2']['#access'] = FALSE;
  // @todo see what other stuff we have to disable (also in implements alter).
  // need to find a solution for views displays also.
}
