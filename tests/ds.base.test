<?php
// $Id$

/**
 * @file
 * Base functions and tests for Display Suite.
 */

class dsBaseTest extends DrupalWebTestCase {

  /**
   * Implementation of setUp().
   */
  function setUp() {
    parent::setUp('ds', 'ds_switch_vm', 'ds_search');
    $this->admin_user = $this->drupalCreateUser(array('admin_view_modes', 'admin_fields', 'admin_display_suite', 'use text format ds_code', 'access administration pages', 'administer content types', 'administer users'));
    $this->drupalLogin($this->admin_user);
  }

  /**
   * Create a view mode.
   *
   * @param $edit
   *   An optional array of view mode properties.
   */
  function dsCreateViewMode($edit = array()) {

    $edit += array(
      'name' => 'Testing',
      'view_mode' => 'testing',
      'entities[node]' => '1'
    );

    $this->drupalPost('admin/structure/ds/view_modes/manage', $edit, t('Save'));
    $this->assertText(t('The view mode '. $edit['name'] .' has been saved'), t('!name view mode has been saved', array('!name' => $edit['name'])));
  }

  /**
   * Create a code field.
   *
   * @param $edit
   *   An optional array of field properties.
   */
  function dsCreateCodeField($edit = array()) {

    $edit += array(
      'name' => 'Test field',
      'field' => 'test_field',
      'entities[node]' => '1',
      'code[value]' => 'Test field',
      'use_token' => '0',
    );

    $this->drupalPost('admin/structure/ds/fields/manage_custom', $edit, t('Save'));
    $this->assertText(t('The field '. $edit['name'] .' has been saved'), t('!name field has been saved', array('!name' => $edit['name'])));
  }

  /**
   * Create a block field.
   *
   * @param $edit
   *   An optional array of field properties.
   */
  function dsCreateBlockField($edit = array()) {

    $edit += array(
      'name' => 'Test block field',
      'field' => 'test_block_field',
      'entities[node]' => '1',
      'block' => 'node|recent',
      'block_render' => DS_BLOCK_TEMPLATE,
    );

    $this->drupalPost('admin/structure/ds/fields/manage_block', $edit, t('Save'));
    $this->assertText(t('The field '. $edit['name'] .' has been saved'), t('!name field has been saved', array('!name' => $edit['name'])));
  }
}

/**
 * Test managing of custom fields.
 */
class dsFieldsTests extends dsBaseTest {

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => t('Fields'),
      'description' => t('Tests for managing custom code and block fields.'),
      'group' => t('Display suite'),
    );
  }

  /**
   * Test custom fields.
   */
  function testDSCustomFields() {

    $edit = array(
      'name' => 'Test field',
      'field' => 'test_field',
      'entities[node]' => '1',
      'code[value]' => 'Test field',
      'use_token' => '0',
    );

    $this->dsCreateCodeField($edit);

    // Create the same and assert it already exists.
    $this->drupalPost('admin/structure/ds/fields/manage_custom', $edit, t('Save'));
    $this->assertText(t('The machine-readable name is already in use. It must be unique.'), t('Field testing already exists.'));

    // Assert it's found on the Field UI for article.
    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertRaw('fields[test_field][weight]', t('Test field found on node article.'));

    // Assert it's not found on the Field UI for article.
    $this->drupalGet('admin/config/people/accounts/display');
    $this->assertNoRaw('fields[test_field][weight]', t('Test field not found on user.'));

    // Update testing label
    $edit = array(
      'name' => 'Test field 2',
    );
    $this->drupalPost('admin/structure/ds/fields/manage_custom/test_field', $edit, t('Save'));
    $this->assertText(t('The field Test field 2 has been saved'), t('Test field label updated'));

    // Remove a view mode.
    $this->drupalPost('admin/structure/ds/fields/delete/test_field', array(), t('Delete'));
    $this->assertText(t('The field Test field 2 has been deleted'), t('Test field removed'));

    // Assert the view mode is gone at the manage display screen.
    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertNoRaw('fields[test_field][weight]', t('Test field field found on node article.'));
  }

  /**
   * Test custom blocks.
   */
  function testDSCustomBlocks() {

    $edit = array(
      'name' => 'Test block field',
      'field' => 'test_block_field',
      'entities[node]' => '1',
      'block' => 'node|recent',
      'block_render' => DS_BLOCK_TEMPLATE,
    );

    $this->dsCreateBlockField($edit);

    // Create the same and assert it already exists.
    $this->drupalPost('admin/structure/ds/fields/manage_block', $edit, t('Save'));
    $this->assertText(t('The machine-readable name is already in use. It must be unique.'), t('Block test field already exists.'));

    // Assert it's found on the Field UI for article.
    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertRaw('fields[test_block_field][weight]', t('Test block field found on node article.'));

    // Assert it's not found on the Field UI for article.
    $this->drupalGet('admin/config/people/accounts/display');
    $this->assertNoRaw('fields[test_block_field][weight]', t('Test block field not found on user.'));

    // Update testing label
    $edit = array(
      'name' => 'Test block field 2',
    );
    $this->drupalPost('admin/structure/ds/fields/manage_block/test_block_field', $edit, t('Save'));
    $this->assertText(t('The field Test block field 2 has been saved'), t('Test field label updated'));

    // Remove a view mode.
    $this->drupalPost('admin/structure/ds/fields/delete/test_block_field', array(), t('Delete'));
    $this->assertText(t('The field Test block field 2 has been deleted'), t('Test field removed'));

    // Assert the view mode is gone at the manage display screen.
    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertNoRaw('fields[test_block_field][weight]', t('Test block field found on node article.'));
  }

}

/**
 * Test managing of view modes.
 */
class dsViewModesTests extends dsBaseTest {

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => t('View modes'),
      'description' => t('Tests for managing custom view modes.'),
      'group' => t('Display suite'),
    );
  }

  /**
   * Test managing view modes.
   */
  function testDSManageViewModes() {

    $edit = array(
      'name' => 'Testing',
      'view_mode' => 'testing',
      'entities[node]' => '1'
    );

    $this->dsCreateViewMode($edit);

    // Create the same and assert it already exists.
    $this->drupalPost('admin/structure/ds/view_modes/manage', $edit, t('Save'));
    $this->assertText(t('The machine-readable name is already in use. It must be unique.'), t('View mode testing already exists.'));

    // Assert it's found on the Field UI for article.
    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertRaw('display_suite[modes][view_modes_custom][testing]', t('Testing view mode found on node article.'));

    // Assert it's not found on the Field UI for article.
    $this->drupalGet('admin/config/people/accounts/display');
    $this->assertNoRaw('display_suite[modes][view_modes_custom][testing]', t('Testing view mode not found on user.'));

    // Update testing label
    $edit = array(
      'name' => 'Testing 2',
    );
    $this->drupalPost('admin/structure/ds/view_modes/manage/testing', $edit, t('Save'));
    $this->assertText(t('The view mode Testing 2 has been saved'), t('Testing label updated'));

    // Remove a view mode.
    $this->drupalPost('admin/structure/ds/view_modes/delete/testing', array(), t('Delete'));
    $this->assertText(t('The view mode Testing 2 has been deleted'), t('Testing view mode removed'));

    // Assert the view mode is gone at the manage display screen.
    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertNoRaw('display_suite[modes][view_modes_custom][testing]', t('Testing view mode found on node article.'));
  }
}